name: Build

on: [push]

jobs:

  Unix:
    name: ${{matrix.name}} (${{matrix.config}})
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        name: [
          ubuntu-18.04-gcc-9,
          ubuntu-20.04-gcc-9,
          ubuntu-20.04-gcc-10,
          ubuntu-20.04-clang-8,
          ubuntu-20.04-clang-9,
          ubuntu-20.04-clang-10,
          macOS-latest,
        ]
        config: [Debug, Release]
        include:
          - name: ubuntu-18.04-gcc-8
            os: ubuntu-18.04
            compiler: gcc
            version: "9"

          - name: ubuntu-20.04-gcc-9
            os: ubuntu-20.04
            compiler: gcc
            version: "9"

          - name: ubuntu-20.04-gcc-10
            os: ubuntu-20.04
            compiler: gcc
            version: "10"

          - name: ubuntu-20.04-clang-8
            os: ubuntu-20.04
            compiler: clang
            version: "8"

          - name: ubuntu-20.04-clang-9
            os: ubuntu-20.04
            compiler: clang
            version: "9"

          - name: ubuntu-20.04-clang-10
            os: ubuntu-20.04
            compiler: clang
            version: "10"

          - name: macOS-latest
            os: macOS-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          # ninja version to download. Default: 1.10.0
          version: 1.10.0

      - name: Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update

            if [ "${{ matrix.compiler }}" = "gcc" ]; then
              sudo apt-get install -y g++-${{ matrix.version }}
              echo "::set-env name=CC::gcc-${{ matrix.version }}"
              echo "::set-env name=CXX::g++-${{ matrix.version }}"
            else
              sudo apt-get install -y clang-${{ matrix.version }}
              echo "::set-env name=CC::clang-${{ matrix.version }}"
              echo "::set-env name=CXX::clang++-${{ matrix.version }}"
            fi

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{matrix.config}}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C ${{matrix.config}}

  Windows:
    name: Windows (${{matrix.config}})
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          # ninja version to download. Default: 1.10.0
          version: 1.10.0

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{matrix.config}}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C ${{matrix.config}}
